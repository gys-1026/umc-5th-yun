-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- region Table Create SQL
-- 테이블 생성 SQL - region
CREATE TABLE region
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '지역 아이디', 
    `name`        VARCHAR(50)    NOT NULL    COMMENT '지역 이름', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - region
ALTER TABLE region COMMENT '지역';


-- store Table Create SQL
-- 테이블 생성 SQL - store
CREATE TABLE store
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '가게 아이디', 
    `region_id`   BIGINT         NOT NULL    COMMENT '지역 아이디', 
    `name`        VARCHAR(50)    NOT NULL    COMMENT '가게 이름', 
    `addr`        VARCHAR(50)    NOT NULL    COMMENT '가게 주소', 
    `score`       FLOAT          NOT NULL    COMMENT '보상 포인트', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - store
ALTER TABLE store COMMENT '가게';

-- Foreign Key 설정 SQL - store(region_id) -> region(id)
ALTER TABLE store
    ADD CONSTRAINT FK_store_region_id_region_id FOREIGN KEY (region_id)
        REFERENCES region (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - store(region_id)
-- ALTER TABLE store
-- DROP FOREIGN KEY FK_store_region_id_region_id;


-- users Table Create SQL
-- 테이블 생성 SQL - users
CREATE TABLE users
(
    `id`             BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '사용자 아이디', 
    `name`           VARCHAR(50)    NOT NULL    COMMENT '사용자  이름', 
    `gender`         VARCHAR(50)    NOT NULL    COMMENT '성별', 
    `age`            INT            NOT NULL    COMMENT '나이', 
    `addr`           VARCHAR(50)    NOT NULL    COMMENT '주소', 
    `spec_addr`      VARCHAR(50)    NOT NULL    COMMENT '상세주소', 
    `nickname`       VARCHAR(50)    NOT NULL    COMMENT '닉네임', 
    `email`          VARCHAR(50)    NOT NULL    COMMENT '이메일', 
    `point`          INT            NOT NULL    COMMENT '포인트', 
    `status`         VARCHAR(15)    NOT NULL    COMMENT '회원상태', 
    `inactive_date`  DATETIME       NOT NULL    COMMENT '비활성상태시간', 
    `created_at`     DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`     DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - users
ALTER TABLE users COMMENT '사용자';


-- review Table Create SQL
-- 테이블 생성 SQL - review
CREATE TABLE review
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '리뷰 아이디', 
    `user_id`     BIGINT         NOT NULL    COMMENT '사용자 아이디', 
    `store_id`    BIGINT         NOT NULL    COMMENT '가게 아이디', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - review
ALTER TABLE review COMMENT '리뷰';

-- Foreign Key 설정 SQL - review(user_id) -> users(id)
ALTER TABLE review
    ADD CONSTRAINT FK_review_user_id_users_id FOREIGN KEY (user_id)
        REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - review(user_id)
-- ALTER TABLE review
-- DROP FOREIGN KEY FK_review_user_id_users_id;

-- Foreign Key 설정 SQL - review(store_id) -> store(id)
ALTER TABLE review
    ADD CONSTRAINT FK_review_store_id_store_id FOREIGN KEY (store_id)
        REFERENCES store (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - review(store_id)
-- ALTER TABLE review
-- DROP FOREIGN KEY FK_review_store_id_store_id;


-- food Table Create SQL
-- 테이블 생성 SQL - food
CREATE TABLE food
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '음식 아이디', 
    `name`        VARCHAR(50)    NOT NULL    COMMENT '음식이름', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `Column4`     DATETIME(6)    NOT NULL    COMMENT '칼럼', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - food
ALTER TABLE food COMMENT '음식 카테고리';


-- mission Table Create SQL
-- 테이블 생성 SQL - mission
CREATE TABLE mission
(
    `id`            BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '미션 아이디', 
    `store_id`      BIGINT         NOT NULL    COMMENT '가게 아이디', 
    `reward`        INT            NOT NULL    COMMENT '보상 포인트', 
    `deadline`      DATETIME       NOT NULL    COMMENT '기한', 
    `mission_body`  TEXT           NOT NULL    COMMENT '미션 내용', 
    `created_at`    DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`    DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - mission
ALTER TABLE mission COMMENT '미션';

-- Foreign Key 설정 SQL - mission(store_id) -> store(id)
ALTER TABLE mission
    ADD CONSTRAINT FK_mission_store_id_store_id FOREIGN KEY (store_id)
        REFERENCES store (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - mission(store_id)
-- ALTER TABLE mission
-- DROP FOREIGN KEY FK_mission_store_id_store_id;


-- agree Table Create SQL
-- 테이블 생성 SQL - agree
CREATE TABLE agree
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '약관 아이디', 
    `title`       VARCHAR(50)    NOT NULL    COMMENT '약관명', 
    `body`        TEXT           NOT NULL    COMMENT '약관 내용', 
    `check`       BOOLEAN        NOT NULL    COMMENT '체크 여부', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - agree
ALTER TABLE agree COMMENT '약관';


-- review_image Table Create SQL
-- 테이블 생성 SQL - review_image
CREATE TABLE review_image
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '사진 아이디', 
    `review_id`   BIGINT         NOT NULL    COMMENT '리뷰 아이디', 
    `image_url`   TEXT           NOT NULL    COMMENT '이미지 주소', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - review_image
ALTER TABLE review_image COMMENT '리뷰 사진 관리';

-- Foreign Key 설정 SQL - review_image(review_id) -> review(id)
ALTER TABLE review_image
    ADD CONSTRAINT FK_review_image_review_id_review_id FOREIGN KEY (review_id)
        REFERENCES review (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - review_image(review_id)
-- ALTER TABLE review_image
-- DROP FOREIGN KEY FK_review_image_review_id_review_id;


-- user_agree Table Create SQL
-- 테이블 생성 SQL - user_agree
CREATE TABLE user_agree
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '사용자 약관아이디', 
    `user_id`     BIGINT         NOT NULL    COMMENT '사용자 아이디', 
    `agree_id`    BIGINT         NOT NULL    COMMENT '약관 아이디', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - user_agree
ALTER TABLE user_agree COMMENT '각 사용자 약관 동의 여부';

-- Foreign Key 설정 SQL - user_agree(user_id) -> users(id)
ALTER TABLE user_agree
    ADD CONSTRAINT FK_user_agree_user_id_users_id FOREIGN KEY (user_id)
        REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - user_agree(user_id)
-- ALTER TABLE user_agree
-- DROP FOREIGN KEY FK_user_agree_user_id_users_id;

-- Foreign Key 설정 SQL - user_agree(agree_id) -> agree(id)
ALTER TABLE user_agree
    ADD CONSTRAINT FK_user_agree_agree_id_agree_id FOREIGN KEY (agree_id)
        REFERENCES agree (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - user_agree(agree_id)
-- ALTER TABLE user_agree
-- DROP FOREIGN KEY FK_user_agree_agree_id_agree_id;


-- prefer Table Create SQL
-- 테이블 생성 SQL - prefer
CREATE TABLE prefer
(
    `id`            BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '선호도 아이디', 
    `user_id`       BIGINT         NOT NULL    COMMENT '사용자 아이디', 
    `catergory_id`  BIGINT         NOT NULL    COMMENT '카테고리 아이디', 
    `created_at`    DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`    DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - prefer
ALTER TABLE prefer COMMENT '선호도 조사';

-- Foreign Key 설정 SQL - prefer(catergory_id) -> food(id)
ALTER TABLE prefer
    ADD CONSTRAINT FK_prefer_catergory_id_food_id FOREIGN KEY (catergory_id)
        REFERENCES food (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - prefer(catergory_id)
-- ALTER TABLE prefer
-- DROP FOREIGN KEY FK_prefer_catergory_id_food_id;

-- Foreign Key 설정 SQL - prefer(user_id) -> users(id)
ALTER TABLE prefer
    ADD CONSTRAINT FK_prefer_user_id_users_id FOREIGN KEY (user_id)
        REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - prefer(user_id)
-- ALTER TABLE prefer
-- DROP FOREIGN KEY FK_prefer_user_id_users_id;


-- user_mission Table Create SQL
-- 테이블 생성 SQL - user_mission
CREATE TABLE user_mission
(
    `id`          BIGINT         NOT NULL    AUTO_INCREMENT COMMENT '사용자 미션 아이디', 
    `user_id`     BIGINT         NOT NULL    COMMENT '사용자 아이디', 
    `mission_id`  BIGINT         NOT NULL    COMMENT '미션 아이디', 
    `status`      VARCHAR(50)    NOT NULL    COMMENT '미션상태', 
    `created_at`  DATETIME(6)    NOT NULL    COMMENT '생성시간', 
    `updated_at`  DATETIME(6)    NOT NULL    COMMENT '갱신시간', 
     PRIMARY KEY (id)
);

-- 테이블 Comment 설정 SQL - user_mission
ALTER TABLE user_mission COMMENT '사용자 미션';

-- Foreign Key 설정 SQL - user_mission(user_id) -> users(id)
ALTER TABLE user_mission
    ADD CONSTRAINT FK_user_mission_user_id_users_id FOREIGN KEY (user_id)
        REFERENCES users (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - user_mission(user_id)
-- ALTER TABLE user_mission
-- DROP FOREIGN KEY FK_user_mission_user_id_users_id;

-- Foreign Key 설정 SQL - user_mission(mission_id) -> mission(id)
ALTER TABLE user_mission
    ADD CONSTRAINT FK_user_mission_mission_id_mission_id FOREIGN KEY (mission_id)
        REFERENCES mission (id) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- Foreign Key 삭제 SQL - user_mission(mission_id)
-- ALTER TABLE user_mission
-- DROP FOREIGN KEY FK_user_mission_mission_id_mission_id;


